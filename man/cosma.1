.\" Automatically generated by Pandoc 3.4
.\"
.TH "Cosma\[cq]s User manual" "" "2023\-12\-03" ""
.SH NAME
cosma - document graph visualization
.SH DESCRIPTION
Cosma is a visualization tool for knowledge workers.
It reads plain text files with [[wiki links]] and renders them as an
interactive network of index cards.
.PP
Cosma works with configuration files written in YAML.
Each configuration file specifies a data source to be used, as well as
various parameters that govern the behavior of Cosma for this data
source.
.PP
Two approaches can be taken regarding configuration files:
.PP
The first approach is to run \f[CR]cosma\f[R] in a directory where a
configuration file is located.
This is called a local configuration file.
Local configuration files must always be named \f[CR]config.yml\f[R].
.PP
The other approach is to run \f[CR]cosma\f[R] with the
\f[CR]\-\-project <name>\f[R] option, where \f[CR]<name>\f[R] is the
name of a configuration file found in a special folder, the user data
directory.
This is called a global configuration file, or \f[B]project\f[R].
This file can be named freely (e.g.\ \f[CR]foo.yml\f[R]).
With this second approach, the \f[CR]cosma\f[R] command can be run from
any location.
.PP
The local approach is useful for automation and reproducibility in a
context of shared or distributed work on several machines.
It allows the simultaneous transmission of data, configuration and
operating instructions (commands), bundled and useable as is, without
any additional parameterization required from the recipient (human or
machine).
.PP
Conversely, the global approach is useful for prolonged use of the
software by an individual on a single machine.
.SH THE \f[CR]cosma\f[R] COMMAND
The \f[CR]cosma\f[R] command can be used in three ways:
.IP "1." 3
\f[CR]cosma\f[R] displays general help ;
.IP "2." 3
\f[CR]cosma <option>\f[R] executes a general option;
.IP "3." 3
\f[CR]cosma <command> <options>\f[R] executes one of Cosma\[cq]s five
commands (\f[CR]config\f[R], \f[CR]record\f[R], \f[CR]autorecord\f[R],
\f[CR]batch\f[R] and \f[CR]modelize\f[R]), with one or more specific
options.
.PP
The five commands exist in long and short versions
(e.g.\ \f[CR]cosma config\f[R] or \f[CR]cosma c\f[R]).
Some options also have a short version
(e.g.\ \f[CR]cosma config \-\-global\f[R] or
\f[CR]cosma config \-g\f[R]).
In both cases, the long and short versions are functionally identical;
the short version is simply used to save time when used repeatedly over
short periods of time.
.PP
The following subsections present the general options.
.SS Create the user data directory
.IP
.EX
cosma \-\-create\-user\-data\-dir
.EE
.PP
This command creates a user data directory named \f[CR]cosma\-cli\f[R]
at a location that complies with the XDG Base Directory specification.
The exact location depends on each operating system and may vary from
version to version of the same system.
.PP
If the user data directory already exists, the command simply displays
its location.
.SS Show projects
.IP
.EX
cosma \-\-list\-projects
.EE
.PP
This command lists the configuration files in the user data directory
(projects).
.SS Show version number
.IP
.EX
cosma \-\-version
cosma \-V
.EE
.PP
\f[B]NB:\f[R] this is the only option for which the short form uses a
capital letter.
This is a default setting from the library we use to define commands.
.SS Show help
Cosma has a general help:
.IP
.EX
cosma \-\-help
cosma \-h
.EE
.PP
Context\-sensitive help is also available for the five Cosma commands.
Add the \f[CR]\-h/\-\-help\f[R] flag to any of these commands to display
the contextual help.
.PP
Example:
.IP
.EX
cosma config \-\-help
.EE
.SH CONFIGURATION
.SS Create a configuration file
.IP
.EX
cosma config
cosma c
.EE
.PP
This command creates a \f[CR]config.yml\f[R] file in the current
directory.
.SS Create a global configuration file (project)
.IP
.EX
cosma config \-\-global <name>
cosma c \-g <name>
.EE
.PP
The \f[CR]\-g/\-\-global\f[R] option followed by a name creates a
\f[CR]name.yml\f[R] file in the user data directory.
.SS Create a default configuration file
.IP
.EX
cosma config \-\-global
cosma c \-g
.EE
.PP
When not followed by a name, the \f[CR]\-g/\-\-global\f[R] option
creates a \f[CR]defaults.yml\f[R] file in the user data directory.
.PP
When you create a new configuration file with the
\f[CR]cosma config\f[R] command, Cosma checks if the
\f[CR]defaults.yml\f[R] file exists.
If so, it copies the settings from \f[CR]defaults.yml\f[R] and applies
them to the newly created configuration.
This allows you to reuse settings that are common to all of your
projects.
.PP
For example, if you always use the same bibliographic data, node label
size and graph background color, then you can set up
\f[CR]defaults.yml\f[R] like this:
.IP
.EX
graph_text_size: 5
graph_background_color: \[dq]#f3f6f4\[dq]
bibliography: /path/to/references.json
.EE
.PP
All new configurations will inherit these values.
.SS Configuration parameters
Below is a list of the parameters used by Cosma.
If a parameter is missing from a configuration file, Cosma considers it
to have its default value.
.PP
The \[lq]undefined\[rq] record and link types are required for the
program to work.
If you delete them from a configuration file, Cosma will automatically
reinsert them the next time you use the file.
.RS -14n
.IP
.EX
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
  name                         description                 possible values   default value
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
  select_origin                Data source type            directory         directory
                                                           (directory of     
                                                           text files), csv  
                                                           (tabular data,    
                                                           local files) or   
                                                           online (tabular   
                                                           data, online      
                                                           files)            

  files_origin                 Location of files for data  path (directory)  
                               source type directory                         

  nodes_origin                 Location of nodes for data  path (CSV file)   
                               source type csv                               

  links_origin                 Location of links for data  path (CSV file)   
                               source type csv                               

  nodes_online                 Location of nodes for data  URL (CSV file)    
                               source type online                            

  links_online                 Location of links for data  URL (CSV file)    
                               source type online                            

  images_origin                Location of images used in  path (directory)  
                               the cosmoscope                                

  export_target                Location to be used for     path (directory)  
                               exports                                       

  history                      Copy each cosmoscope        true or false     true
                               generated via Cosma to a                      
                               history folder                                

  focus_max                    Maximum distance to         integer           2
                               selected node in focus mode                   

  record_types                 List of entity types        list              

  entity type                                              string            

  fill                         Node type fill color        HTML color        

  stroke                       Node type outline color     HTML color        
                               (used when the node is                        
                               filled with an image)                         

  link_types                   List of link types          list              

  link type                                                string            

  stroke                       Link type stroke style      simple (solid     
                                                           line), dash       
                                                           (dashed line),    
                                                           dotted (dotted    
                                                           line), double     
                                                           (two parallel     
                                                           lines)            

  color                        Link type color             HTML color        

  references_as_nodes          Treat references as graph   true or false     false
                               nodes when using                              
                               cosma modelize \-\-citeproc                     

  references_type_label        Name of the record type for string            
                               bibliographic references                      
                               when                                          
                               references_as_nodes: true                     

  record_filters               List of metadata filters                      

  metadata filter              Entities for which this     type, keyword,    
                               metadata is present will be metadata declared 
                               excluded when creating a    in record_metas   
                               cosmoscope                                    

  graph_background_color       Color used in the           HTML color        
                               background of the graph                       

  graph_highlight_color        Color used when hovering    HTML color        
                               and selecting nodes                           

  graph_highlight_on_hover     Apply highlighting when     true or false     true
                               hovering and selecting                        
                               nodes                                         

  graph_text_size              Node label size             Integer betwen    10
                                                           2\-15              

  graph_arrows                 Show directional arrows on  true or false     true
                               links                                         

  node_size_method             Node sizing method          degree (size      degree
                                                           proportional to   
                                                           degree) or unique 
                                                           (fixed size)      

  node_size                    Node size (when using fixed Integer between 2 10
                               size)                       and 20            

  node_size_max                Maximum node size (when     Integer from 2 to 20
                               using proportional size)    20                

  node_size_min                Minimum node size (when     Integer between 2 2
                               using proportional size)    and 20            

  attraction_force             Force of attraction         Number between 50 200
                                                           and 600           

  attraction_distance_max      Maximum distance between    Number between    250
                               nodes                       200 and 800       

  attraction_vertical          Additional attraction       Number between 0  0
                               towards the vertical axis   (disabled) and 1  

  attraction_horizontal        Additional attraction       Number between 0  0
                               towards the horizontal axis (disabled) and 1  

  chronological_record_meta    deprecated                                    

  record_metas                 List of metadata (present   list              
                               in the data source) to be                     
                               included in the cosmoscope                    

  generate_id                  Set cosma record to always  always, never or  always
                               automatically create        ask               
                               identifiers, never create                     
                               them, or ask for each                         
                               record                                        

  link_context                 Display link context either inline, tooltip   tooltip
                               inline or in a tooltip on                     
                               hover                                         

  hide_id_from_record_header   When set to true, IDs are   true or false     false
                               not shown in the record                       
                               header in the cosmoscope.                     

  title                        Cosmoscope title            string            

  author                       Cosmoscope author           string            

  description                  Cosmoscope description      string            

  keywords                     Cosmoscope keywords         list              

  keyword                                                  string            

  link_symbol                  String to be displayed in   string            
                               place of identifiers as                       
                               link text for rendered                        
                               internal links in                             
                               cosmoscope                                    

  csl                          Bibliographic style         path (XML file)   

  bibliography                 Bibliographic data          path (JSON file)  

  csl_locale                   Bibliographic location      path (XML file)   

  css_custom                   CSS file for cosmoscope     path (CSS file)   
                               customization                                 

  devtools                     Show development tools      true or false     true
                               (only in GUI)                                 

  lang                         Cosmoscope language         en (English) or   en
                                                           fr (French)       
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.EE
.RE
.PP
The background and highlight colors can be changed directly via the
configuration file, but all colors and all interface elements can be
changed using a custom CSS style sheet.
.PP
Applying a vertical/horizontal force tightens the graph.
A value of 0.1 is enough to bring back isolated nodes closer to the
center.
.SS Configuration template
Here is the template used by Cosma to generate a configuration file:
.IP
.EX
select_origin: directory
files_origin: \[aq]\[aq]
nodes_origin: \[aq]\[aq]
links_origin: \[aq]\[aq]
nodes_online: \[aq]\[aq]
links_online: \[aq]\[aq]
images_origin: \[aq]\[aq]
export_target: \[aq]\[aq]
history: true
focus_max: 2
record_types:
  undefined:
    fill: \[aq]#858585\[aq]
    stroke: \[aq]#858585\[aq]
link_types:
  undefined:
    stroke: simple
    color: \[aq]#e1e1e1\[aq]
references_as_nodes: false
references_type_label: references
record_filters: []
graph_background_color: \[aq]#ffffff\[aq]
graph_highlight_color: \[aq]#ff6a6a\[aq]
graph_highlight_on_hover: true
graph_text_size: 10
graph_arrows: true
node_size_method: degree
node_size: 10
node_size_max: 20
node_size_min: 2
attraction_force: 200
attraction_distance_max: 250
attraction_vertical: 0
attraction_horizontal: 0
views: {}
record_metas: []
generate_id: always
link_context: tooltip
hide_id_from_record_header: false
title: \[aq]\[aq]
author: \[aq]\[aq]
description: \[aq]\[aq]
keywords: []
link_symbol: \[aq]\[aq]
csl: \[aq]\[aq]
bibliography: \[aq]\[aq]
csl_locale: \[aq]\[aq]
css_custom: \[aq]\[aq]
devtools: false
lang: en
.EE
.SH CREATING CONTENT: TEXT FILES (MARKDOWN)
When the data source is set on \f[CR]directory\f[R] (Markdown file
directory), the data must comply with the following rules:
.IP \[bu] 2
content is written in Markdown, file extension is \f[CR].md\f[R];
.IP \[bu] 2
metadata is expressed in YAML, in a header at the beginning of the file;
.IP \[bu] 2
internal links are expressed with a wiki\-like syntax (double brackets
\f[CR][[ ]]\f[R]) and based on unique identifiers.
.PP
The following subsections explain these rules in detail.
.PP
This combination of writing standards combines several textual cultures:
documentation (enriching and indexing content with metadata); wikis
(interrelating documents); index cards, Zettelkasten (organising
one\[cq]s notes); academic writing with Pandoc (using plain text as a
source for exporting in various formats).
.PP
Therefore, Cosma works particularly well when used in tandem with
writing environments that also adopt this approach, such as Zettlr or
the Foam extension for Visual Studio Code and VSCodium.
.SS Metadata
In order to be correctly interpreted by Cosma, Markdown files
(\f[CR].md\f[R]) must include a YAML header at the beginning of the
file.
This header is created automatically when you create a file via Cosma.
.PP
Example:
.IP
.EX
\-\-\-
title: Title of the record
id: 20201209111625
types:
\- undefined
tags:
\- mot\-clé 1
\- mot\-clé 2
\-\-\-
.EE
.PP
The YAML header is delimited at the top by three single dashes on a line
(\f[CR]\-\-\-\f[R]) and at the bottom by either three single dashes on a
line again (\f[CR]\-\-\-\f[R]) or by three single dots on a ligne
(\f[CR]...\f[R]).
.PP
In YAML, a field consists of a name and a value separated by a colon.
.PP
In accordance with the YAML specification, the list of keywords can be
written in \f[I]block\f[R] mode:
.IP
.EX
tags\f[B]:\f[R]
\f[B]\-\f[R] keyword 1
\f[B]\-\f[R] keyword 2
.EE
.PP
Or in \f[I]flow\f[R] mode:
.IP
.EX
tags\f[B]:\f[R] \f[B][\f[R]keyword 1\f[B],\f[R] keyword 2\f[B]]\f[R]
.EE
.PP
\f[B]Why a YAML header?\f[R]
.PP
Some applications opt to recognize file metadata heuristically.
For example, if the first line of the file is a level 1 heading, then it
will be interpreted as the title of the file; if the second line
contains words prefixed with a \f[CR]#\f[R] pound sign, then they will
be interpreted as keywords.
.PP
This method is not interoperable: each program has its own conventions,
which limits the user\[cq]s ability to change tools.
.PP
Using a YAML header allows writers to declare different metadata
explicitly and separately.
This has the advantage of making the detection and manipulation of this
metadata trivial, both by machines and humans.
The use of a common format (such as YAML) increases the number of tools
that can be used seamlessly with the same set of files.
And widely used computer tools such as regular expressions and shell
scripts allow people to convert their data themselves in a relatively
simple way if needed.
.SS Predefined metadata
Cosma recognises and uses the following fields:
.TP
\f[CR]title\f[R]
Mandatory.
Title of the record.
.TP
\f[CR]id\f[R]
Optional.
Unique identifier of the record.
Must be a unique string.
Cannot contain \f[CR]|\f[R] or \f[CR]]]\f[R] (these character sequences
are reserved for the link syntax; see next section).
By default, Cosma generates 14\-digit identifiers in the form of a
timestamp (year, month, day, hours, minutes and seconds).
This is inspired by Zettelkasten note\-taking applications such as The
Archive and Zettlr.
.TP
\f[CR]type\f[R] or \f[CR]types\f[R]
Optional.
Record types.
A record can have more than one type.
If the \f[CR]type\f[R] field is not specified or its value does not
match one of the types declared in the configuration, Cosma will
interpret the type of the record as \f[CR]undefined\f[R].
.TP
\f[CR]tags\f[R]
Optional.
Keywords assigned to the record.
The value must be a list.
A record can have as many keywords as you wish.
You can use \f[CR]keywords\f[R] instead of \f[CR]tags\f[R], for
compatibility with Pandoc.
If a record has a \f[CR]tags\f[R] field and a \f[CR]keywords\f[R] field,
only the keywords declared in the \f[CR]tags\f[R] field are interpreted
by Cosma.
.TP
\f[CR]thumbnail\f[R]
Optional.
File name of an image to be used as thumbnail for this record in the
cosmoscope (inside the corresponding node and at the top of the record
pane).
.TP
\f[CR]begin\f[R]
Optional.
Time metadata used for chronological mode.
.TP
\f[CR]end\f[R]
Optional.
Time metadata used for chronological mode.
.SS User\-defined metadata
Other metadata can be added freely in the YAML header.
By default, Cosma ignores this metadata when creating a cosmoscope: it
is not included in the HTML rendering of the records.
In order for this metadata to be taken into account, it must be declared
in the \f[CR]record_metas\f[R] field of the configuration file.
.PP
Example:
.IP
.EX
record_metas: [author, date, lang]
.EE
.SS Content
Cosma interprets files as being written in CommonMark, a strictly
defined version of Markdown, a popular lightweight markup language.
.PP
The CommonMark tutorial teaches you the basics of Markdown in 10
minutes.
.PP
If you want to learn how to use Markdown and Pandoc together, check out
this online lesson: Sustainable Authorship in Plain Text using Pandoc
and Markdown.
.PP
Cosma renders Markdown files into HTML.
Therefore, Markdown files can also include HTML code.
Cosma also supports adding attributes by brackets, as shown below.
.IP
.EX
<div class=\[dq]red\[dq]>This paragraph will be red</div>

This paragraph will be red{.red}
.EE
.PP
Bitmap images can also be rendered using the Markdown syntax.
Example:
.IP
.EX
![Alternative text](image.jpg)
.EE
.PP
To reduce the size of the cosmoscope, use images hosted on the web and
included via a URL.
Example:
.IP
.EX
![Alternative text](http://domain.com/image.jpg)
.EE
.SS Links
Within a record, you link to another record by writing either the title
or identifier between double brackets.
.PP
The \f[CR]id\f[R] field is optional.
But if a record has one, trying to link to tis record based on its
\f[CR]title\f[R] field will fail, as the \f[CR]id\f[R] takes precedence.
.PP
Example of title\-based link:
.IP
.EX
A link to [[record B]].
.EE
.PP
For title\-based links, text case is ignored when parsing but preserved
when rendering.
So you can write \f[CR][[Record B]]\f[R], \f[CR][[record B]]\f[R] or
even \f[CR][[rEcOrD b]]\f[R]: the link will work regardless, and the
text will be rendered the way you wrote it.
.PP
Example of identifier\-based link:
.IP
.EX
A link to [[20201209111625]] record B.
.EE
.PP
For identifier\-based links, you can also include link text within the
brackets.
It can be any string except \f[CR]]]\f[R] (the ending delimiter of the
link).
Example:
.IP
.EX
A link to [[20201209111625|record B]].
.EE
.PP
Cosma also allows you to define \f[B]link types\f[R].
Each link type must be defined in the configuration by a name, a colour
and a stroke pattern.
To apply a type to a link, add the name of the type followed by a colon
before the identifier.
The name can be any string except \f[CR]:\f[R], \f[CR]|\f[R] and
\f[CR]]]\f[R] (characters reserved for the link syntax).
.PP
Example:
.IP
.EX
Concept B is derived from [[generic:concept A]].

Person D wrote against [[opponent:20201209111626|person C]].
.EE
.PP
If you use identifier\-based links without link text, perhaps coming
from software such as The Archive and Zettlr, you can improve the
readability of records in the cosmoscope by using the
\f[CR]link_symbol\f[R] parameter.
It accepts as value an arbitrary Unicode string, which will replace the
identifier and square brackets in the HTML rendering of the records.
This visually lightens the text by replacing numeric identifiers with a
shorter, personal convention.
This can be, for example, a single symbol such as a manicle ☞, an arrow
→, a star ⟡, etc.
.SS Unique identifiers
Each record can have an optional unique identifier.
If present, this identifier is used instead of the title as a target for
links between records.
.PP
\f[B]The identifier must be a unique string.\f[R]
.PP
By default, when you create a record with \f[CR]cosma record\f[R], Cosma
generates a 14\-digit identifier in the form of a timestamp (year,
month, day, hours, minutes and seconds).
This is inspired by Zettelkasten note\-taking applications such as The
Archive and Zettlr.
.PP
For each project, you can choose to generate identifiers always, never
or on a case\-by\-case basis by setting the \f[CR]generate_id\f[R]
parameter in the project\[cq]s configuration.
.PP
We support title\-based links but encourage the use of unique
identifiers instead.
We believe this is the easiest way to avoid link rot in a sustainable
way, avoiding the reliance on a program to automatically maintain links.
This is especially important if you wish to make your data less
dependent on specific applications.
.SS Creating records with Cosma
Cosma includes several commands that allow you to quickly create records
with automatically generated YAML headers.
.PP
These commands only work when \f[CR]select_origin\f[R] is set to
\f[CR]directory\f[R] (i.e.\ for Markdown files).
.PP
Creating files requires a configuration file with
\f[CR]files_origin\f[R] set to a valid path.
This can either be a \f[CR]config.yml\f[R] file in the current working
directory, or a project indicated by adding the
\f[CR]\-p/\-\-projects\f[R] option.
.SS \f[CR]record\f[R] : create a record (\[lq]form\[rq] mode)
.IP
.EX
cosma record
cosma r
cosma record \-\-project <name>
.EE
.PP
This command allows you to create a record in the manner of a form.
Once the command is launched, the software prompts you for a title, one
or several types, and one or several keywords.
Only the title is required.
.SS \f[CR]autorecord\f[R] : create a record (\[lq]one\-liner\[rq] mode)
.IP
.EX
cosma autorecord <title> <type> <keywords>
cosma a <title> <type> <keywords>
cosma autorecord <title> <type> <keywords> \-\-project <name>
.EE
.PP
This command allows you to create a record with a single input.
Only the title is required.
If you enter multiple types or multiple keywords, separate them with
commas (spaces after the comma are ignored).
Example: \f[CR]type A, type B\f[R], \f[CR]keyword1, keyword2\f[R].
.PP
If \f[CR]generate_id\f[R] is set to \f[CR]ask\f[R], use the
\f[CR]\-id/\-\-generated\-id\f[R] flag to automatically generate an
identifier when using \f[CR]autorecord\f[R].
.SS \f[CR]batch\f[R] : create a batch of records
.IP
.EX
cosma batch <path>
cosma b <path>
cosma batch <path> \-\-project <name>
.EE
.PP
This command allows you to create several records at once.
\f[CR]<path>\f[R] corresponds to the location of a file in JSON or CSV
format describing the records to be created.
As with all other record creation modes, the title is mandatory and the
other fields are optional.
.PP
Example of a JSON file containing two records:
.IP
.EX
[
  {
    \[dq]title\[dq]: \[dq]Title of the record\[dq]
  },
  {
    \[dq]title\[dq]: \[dq]Paul Otlet\[dq],
    \[dq]type\[dq]: [\[dq]Person\[dq], \[dq]History\[dq]],
    \[dq]metas\[dq]: {
        \[dq]first name\[dq] : \[dq]Paul\[dq],
        \[dq]family name\[dq]: \[dq]Otlet\[dq]
    },
    \[dq]tags\[dq]: [\[dq]documentation\[dq]],
    \[dq]begin\[dq] : \[dq]1868\[dq],
    \[dq]end\[dq] : \[dq]1944\[dq],
    \[dq]content\[dq]: \[dq]Lorem...\[dq],
    \[dq]thumbnail\[dq] : \[dq]image.jpg\[dq],
    \[dq]references\[dq] : [\[dq]otlet1934\[dq]]
  }
]
.EE
.PP
Example of a CSV file containing these same records:
.IP
.EX
title,content,type:nature,type:field,meta:firstname,meta:lastname,tag:gender,time:begin,time:end,thumbnail,references
Title of the file,,,,,,,,,,,
Paul Otlet,Lorem...,Person,History,Paul,Otlet,man,1868,1944,image.png,otlet1934
.EE
.PP
\f[B]Batch record creation and identifiers\f[R]
.PP
Cosma generates 14\-digit identifiers in the form of a timestamp (year,
month, day, hours, minutes and seconds).
This means you can manually create one record per second, or 86,400
records per day.
Another way to phrase it is to say there is a range of 86,400
identifiers reserved for manual record creation each day.
For example, on 15 January 2022, these identifiers range from
20220115000000 to 20220115235959.
.PP
To prevent generating duplicate identifiers, the batch creation mode
generates identifiers by pseudo\-timestamp.
The first 8 digits, corresponding to the date (year, month, day), are
real.
Example: 20220115 (15 January 2022).
On the other hand, those corresponding to the hours, minutes and seconds
are false, generated outside of real time ranges.
Example: 256495.
As it is impossible to create a record manually at 25h 64min and 95s,
there is no risk of generating duplicate identifiers by using both
methods simultaneously.
.PP
Because of this operation, it is possible to create up to 913,599
records per day and per directory in batch mode before running out of
identifiers.
.PP
In v2.1, \f[CR]batch\f[R] generates buggy identifiers, with extra digits
(more than the expected 14).
This doesn\[cq]t affect projects with \f[CR]generate_id: never\f[R], for
which \f[CR]batch\f[R] correctly generates records without identifiers.
.SH CREATING CONTENT: TABULAR DATA (CSV)
Cosma can interpret tabular data contained in local or online CSV files.
This is an alternative to using Markdown files.
.PP
Tabular data for Cosma must be contained in two files: one for nodes and
one for links.
The locations of these files must be specified in the configuration
file.
.PP
You can generate CSV files with a spreadsheet program.
In fact, it is precisely because online collaborative spreadsheet
programs such as Google Sheets exist that we have added CSV support to
Cosma: they provide a cheap and efficient way to set up collective
knowledge work.
.PP
We offer a Google Sheets template for you to use as a guide.
One sheet should be dedicated to nodes and another to links.
Click on File › Share › Publish to Web.
Select the sheet containing the nodes, then change the format from
\[lq]Web Page\[rq] to \[lq]Comma Separated Values (.csv)\[rq].
Click \[lq]Publish\[rq] and copy the share link.
Repeat the operation for the sheet containing the links (in our
template, this is the \[lq]Extraction\[rq] sheet and not the
\[lq]Links\[rq] sheet).
Paste each link in the corresponding field of the project configuration.
.PP
The column headers of the CSV files must comply with the following
rules.
.SS Metadata for nodes
For nodes, only the \f[CR]title\f[R] metadata is required.
.RS -14n
.IP
.EX
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
  name              description
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
  title             Title (required)

  id                Unique identifier

  type:<name>       Record typology. Each typology contains one or more
                    types. For example, one column may be called
                    type:primary and contain types like person, work,
                    institution; another column may be called
                    type:secondary, with other types.

  tag:<name>        Keyword list

  meta:<name>       User\-defined metadata

  time:begin,       Metadata used by the chronological mode
  time:end          

  content           Textual content of the record

  thumbnail         File name of an image to include as a thumbnail in
                    the record. Supported formats: JPG, PNG. The location
                    of the image files must be specified via the
                    images_origin parameter in the configuration file.

  reference         List of citation keys to include in the bibliography
                    of the record.
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.EE
.RE
.SS Metadata for links
.RS -14n
.IP
.EX
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
  name              description
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
  id                Link identifier (required)

  source            Identifier of the record from which the link
                    originates (required)

  target            Identifier of the record that the link targets
                    (required)

  label             Description of the link (optional). This description
                    is displayed in the context tooltips of the links.

  type              Type of the link (optional)
  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
.EE
.RE
.SH \f[CR]modelize\f[R]: CREATING A COSMOSCOPE
.IP
.EX
cosma modelize
cosma m
cosma modelize \-\-citeproc \-\-custom\-css
.EE
.SS Generating a sample cosmoscope
.IP
.EX
cosma modelize \-\-sample
.EE
.PP
This command generates a sample cosmoscope.
This does not require a configuration file.
The cosmoscope contains an excerpt from the Cosma user manual in
hypertextual form.
.SS Applying custom CSS
.IP
.EX
cosma modelize \-\-custom\-css
.EE
.PP
It is possible to customize the appearance of a cosmoscope via CSS.
To do this, set the \f[CR]css_custom\f[R] parameter from the
configuration file to the path of a CSS stylesheet, then add the
\f[CR]\-\-custom\-css\f[R] flag when generating the cosmoscope.
.PP
In order to know which selectors to use for which CSS declaration, open
the cosmoscope in a web browser and use the browser\[cq]s development
tools to inspect the code, or consult Cosma\[cq]s source code,
specifically \f[CR]/cosma\-core/template.njk\f[R] (for the
cosmoscope\[cq]s HTML structure), \f[CR]/cosma\-core/styles.css\f[R] and
\f[CR]/cosma\-core/print.css\f[R] (for the print styles enabled when
printing a form).
.PP
The cosmoscope stylesheets use CSS variables to define the colors and
fonts used.
You can redefine these variables to change all the interface elements to
which they apply.
In the example below, the \f[CR]custom.css\f[R] file contains
declarations that change the fonts used in the cosmoscope:
.IP
.EX
\f[BI]:root\f[R] {
  \-\-sans: \[dq]IBM Plex Sans\[dq], sans\-serif;
  \-\-serif: \[dq]IBM Plex Serif\[dq], serif;
  \-\-mono: \[dq]IBM Plex Mono\[dq], monospace;
  \-\-condensed: \[aq]Avenir Next Condensed\[aq], sans\-serif;
}
.EE
.SS Using a global configuration file
.IP
.EX
cosma modelize \-\-project <name>
cosma m \-p <name>
.EE
.PP
The \f[CR]\-p/\-\-project\f[R] option applies the parameters of the
\f[CR]name\f[R] project.
.SS Excluding records from the cosmoscope
It is possible to exclude certain records from being included in the
cosmoscope based on the \f[CR]record_filters\f[R] parameter.
The value of this parameter must be a list whose elements can be types,
keywords or specific values of user\-defined metadata (declared in
\f[CR]record_metas\f[R]).
Records whose header contains at least one element of the list are
excluded when generating the cosmoscope.
.IP
.EX
record_filters:
  \- meta: <type/tag/name of a user\-defined metadata>
    value: <value of type/tag/metadata>
.EE
.PP
For each filter, the \f[CR]meta\f[R] parameter takes as its value either
\f[CR]type\f[R] (record type), \f[CR]tag\f[R] (keyword), or the name of
a used\-defined metadata (declared in \f[CR]record_metas\f[R]).
The \f[CR]value\f[R] parameter takes as value the type, keyword or
metadata value for which to exclude records.
.PP
Here is an example.
Consider the following record:
.IP
.EX
\-\-\-
title: Paul Otlet
type: person
group: authors
tags: [documentation, pacifism]
\-\-\-

Paul Otlet (1868\-1944) was a Belgian lawyer, bibliographer
and pacifist who is considered the founder of
modern documentation...
.EE
.PP
The \f[CR]group\f[R] metadata can be declared via
\f[CR]record_metas\f[R] in the configuration file:
.IP
.EX
record_metas: [group]
.EE
.PP
This allows you to use the \f[CR]group\f[R] metadata (in addition to the
title and keywords) as a criterion for excluding certain records via
\f[CR]record_filters\f[R].
In the example below, all records containing \f[CR]group: authors\f[R]
and/or the keyword \f[CR]pacifism\f[R] are excluded:
.IP
.EX
record_filters:
  \- meta: group
    value: authors
  \- meta: tag
    value: pacifism
.EE
.SS History
By default, Cosma automatically copies each generated cosmoscope to a
\f[CR]history\f[R] directory.
This can be disabled by setting \f[CR]history: false\f[R] in the
configuration file.
.SS Errors and warnings
If Cosma encounters problems during the generation of a cosmoscope, it
creates an error report in a \f[CR]reports\f[R] subdirectory of the user
data directory.
If the latter does not exist, \f[CR]reports\f[R] is placed in the Cosma
installation directory.
.SH CITATIONS AND BIBLIOGRAPHIES
Cosma includes automatic citation processing.
This functionality is based on the same techniques as Zettlr:
bibliographic data and styles use the Citation Style Language (CSL)
standard, while the insertion of citations in the text is done with the
Pandoc citation syntax.
.SS Required files
To automatically process citations, Cosma requires three files:
.TP
Bibliographic data
File containing metadata describing bibliographic references.
The required format is CSL JSON (extension \f[CR].json\f[R]).
.TP
Bibliographic style
File containing the formatting rules for citations and bibliographies.
The required format is CSL (extension \f[CR].csl\f[R]).
You can download style files from the Zotero CSL styles directory.
.TP
Bibliographic localization
File containing localized terms used in bibliographies
(e.g.\ \[lq]publisher\[rq], \[lq]issue\[rq]\&...).
The required format is XML (extension \f[CR].xml\f[R]).
You can download localization files from the CSL project GitHub
repository.
.PP
In the data file, each reference must have a unique identifier
(\f[CR]id\f[R]) that serves as a citation key.
Example:
.IP
.EX
[
  {
    \[dq]id\[dq]:\[dq]goody1977\[dq],
    \[dq]author\[dq]:[{\[dq]family\[dq]:\[dq]Goody\[dq],\[dq]given\[dq]:\[dq]Jack\[dq]}],
    \[dq]citation\-key\[dq]:\[dq]goody1977\[dq],
    \[dq]event\-place\[dq]:\[dq]Cambridge\[dq],
    \[dq]ISBN\[dq]:\[dq]978\-0\-521\-21726\-2\[dq],
    \[dq]issued\[dq]:{\[dq]date\-parts\[dq]:[[1977]]},
    \[dq]language\[dq]:\[dq]en\[dq],
    \[dq]number\-of\-pages\[dq]:\[dq]179\[dq],
    \[dq]publisher\[dq]:\[dq]Cambridge University Press\[dq],
    \[dq]publisher\-place\[dq]:\[dq]Cambridge\[dq],
    \[dq]title\[dq]:\[dq]The Domestication of the Savage Mind\[dq],
    \[dq]type\[dq]:\[dq]book\[dq]
  },
]
.EE
.PP
You can use the bibliographic reference manager Zotero with the Better
BibTeX extension to create unique citation keys for each reference and
have an automatically updated export of your library that Cosma can use.
.SS Citation syntax
To cite a reference in a record, include the citation key for that
reference using the Pandoc citation syntax.
.PP
Example:
.IP
.EX
On writing as a technology of the intellect [\[at]goody1977, 46\-52]...
.EE
.SS Processing citations
.IP
.EX
cosma modelize \-\-citeproc
.EE
.PP
When processing citations, each citation key is replaced with formatted
text and a bibliography is generated below the body of each record
containing references.
.PP
Example:
.IP
.EX
On writing as a technology of the intellect (Goody 1977, 46\-52)\&...

Bibliography
\-\-\-\-\-\-\-\-\-\-\-\-

GOODY, Jack, 1977. The Domestication of the Savage Mind.
  Cambridge University Press. ISBN 978\-0\-521\-21726\-2.
.EE
.PP
The CSL JSON data matching the cited references is embedded in the
cosmoscope.
You can view and download this data in the cosmoscope by clicking on the
\[lq]Data\[rq] button at the bottom of the left\-hand side menu.
You can also access it from within the cosmoscope source code, under the
\f[CR]<article id=\[dq]citation\-references\[dq]>\f[R] tag.
.SS Treating references as graph nodes
When configuration setting \f[CR]references_as_nodes\f[R] is set to
\f[CR]true\f[R], it modifies the behavior of the \f[CR]\-\-citeproc\f[R]
option of \f[CR]cosma modelize\f[R], making it so that bibliographic
references become nodes in the graph: each cited reference is treated as
a node and each citation is treated as a link; for each cited reference,
a bibliographic record is automatically generated in the cosmoscope;
each bibliographic record is presented with contextualized backlinks
which correspond to citations of that bibliographic reference in other
records.
.PP
To use this feature, you must do three things:
.IP "1." 3
set \f[CR]references_as_nodes\f[R] to \f[CR]true\f[R] in the
project\[cq]s configuration;
.IP "2." 3
define a value for \f[CR]references_type_label\f[R] (this is a new
setting introduced alongside \f[CR]references_as_nodes\f[R] in this
release);
.IP "3." 3
create a record type with the same name as the value for
\f[CR]references_type_label\f[R].
.PP
For instance:
.IP
.EX
references_as_nodes: true
references_type_label: \[dq]référence\[dq]
record_types:
  référence:
    stroke: \[dq]#6C6C6C\[dq]
    fill: \[dq]#6C6C6C\[dq]
.EE
.PP
When references are treated as nodes, you can use link types on
citations.
Link types can only be used when citations are within brackets.
They must be the first string within the brackets, ending with a colon
\f[CR]:\f[R].
Example:
.IP
.EX
On writing as a technology of the intellect [cites as authority:\[at]goody1977, 46\-52]...
.EE
.SH USING THE COSMOSCOPE
.SS Layout
The cosmoscope is organised in three columns:
.TP
Left side panel (Menu)
Displays exploratory features such as the index, search bar, filters,
views and graph settings.
.TP
Central area (Graph)
Displays the graph and associated controls (zoom, focus).
.TP
Right side panel (Record)
Displays the records with a list of outgoing links (Links) and incoming
links (Backlinks).
.PP
The panels can be hidden or shown by clicking on toggle buttons
(respectively at the top left and top right of the cosmoscope).
.SS Graph
The central area of the cosmoscope is an interactive graph of labelled
nodes.
Each node corresponds to a record; the label corresponds to the title of
the record.
The links correspond to the links established between the records via
their identifiers.
.PP
Hovering over a node temporarily highlights it and its connections.
Clicking on a node highlights it and its connections and opens the
corresponding record.
It also centers the graph view on that node.
Press \f[CR]C\f[R] to manually center on the selected node.
.PP
You can zoom in and out of the graph freely with a mouse or touchpad, by
double\-clicking on the graph background or with the dedicated buttons
at the bottom left.
The Reset button (shortcut: \f[CR]R\f[R]) resets the zoom.
.PP
Nodes are organised in space by a force simulation algorithm.
A coloured bar at the top of the Menu indicates the state of the drawing
process (active or finished).
Click on this bar (shortcut: \f[CR]Space\f[R]) to start an additional
simulation cycle.
This does not reset the graph but re\-runs the algorithm on the existing
graph, improving its layout.
.PP
If you have a particularly tangled graph, pressing \f[CR]Space\f[R] a
few times will progressively untangle it.
.PP
The graph is not fixed: nodes can be moved by click and drag.
However, the nodes and links remain permanently subject to the
simulation, so it is not possible to arrange them manually.
Modifying the records may change the arrangement of the nodes in space.
.PP
The way the graph is displayed can be changed temporarily via the
controls under Graph settings in the Menu.
To change the display permanently, change the default values of the
corresponding settings in the configuration file.
.PP
Change the strength and maximum distance between nodes to adapt the
display to your screen resolution and size.
Add vertical/horizontal attraction to tighten the graph and bring
isolated nodes closer to the center.
.PP
The graph can be displayed on all types of screens but is not optimised
for mobile devices: touch does not give access to certain interactions
such as hovering, and small screens greatly limit the usefulness of the
graph.
.SS Records
Records can be opened by clicking on a node, an index entry, a search
engine suggestion, or a link in the body or footer of a record.
Opening a record displays its contents in the right side panel.
.PP
You can go forward or backward with the browser\[cq]s Previous / Next
functions.
Opening a record adds the corresponding identifier at the end of the
URL.
This allows you to copy direct links to records.
.PP
To deselect a node, press the Esc key.
.PP
The links in the records are clickable.
In a browser, you can open these links in a new tab via a right click.
The title of the link (displayed in a tooltip after 1\-2 seconds of
hovering) is the title of the corresponding record.
.PP
At the bottom of each record is a list of outgoing links (section titled
\[lq]Links\[rq]) and incoming links (section titled
\[lq]Backlinks\[rq]).
Links and backlinks are contextualised: they are presented with the
surrounding paragraph in the source record.
You can set \f[CR]link_context\f[R] to \f[CR]inline\f[R] instead of
\f[CR]tooltip\f[R] if you want the link context to be displayed at all
times, instead of in a tooltip on hover.
.PP
Contextualised backlinks are one the most useful features in hypertext
systems.
It is famously absent from the Web.
Many interrelated note\-taking applications treat links as
\[lq]first\-class citizens\[rq], and this includes contextualised
backlinks.
However, when these notes are shared on the Web, this feature is not
always included, or it is only included in a paid plan.
With Cosma, contextualised backlinks are part of the package, whether
you\[cq]re the author of a cosmoscope working locally, or someone
exploring a cosmoscope on the Web.
.SS Focus mode
Activate Focus mode (shortcut: \f[CR]F\f[R]) by ticking the
\[lq]Focus\[rq] box at the bottom left of the graph.
In Focus mode, only direct connections to the selected node are
displayed in the interface.
Focus mode only works if you have selected a record.
.PP
You can increase the maximum distance displayed in Focus mode with the
slider located beneath the Focus button.
The slider\[cq]s maximum value can be set through the
\f[CR]focus_max\f[R] parameter in the configuration file.
A value of 1 means only the immediate connections will be displayed when
in Focus mode.
A value of 2 means you can extend the focus two connections of
connections, and so on.
.PP
The focus level slider can be controlled with the arrow keys.
You can combine shortcuts: \f[CR]F\f[R] to activate Focus mode, then
arrow keys to increase and decrease the focus level.
.SS Search bar
The text field at the top of the Menu allows you to search record
titles.
It suggests a list of records whose title is closest to what you type in
the search bar (using fuzzy search).
Clicking on a suggestion selects the corresponding node in the graph and
opens the corresponding record in the right side panel.
.PP
The available suggestions are constrained by the filters and focus mode:
a record hidden by either of these features will not be accessible via
the search engine.
When you want to start from scratch for a new query, you can click on
Reset display (shortcut: \f[CR]Alt\f[R] + \f[CR]R\f[R]).
.SS Filtering by record type
The list of record types in the Menu allows you to filter the display.
Deselecting a type hides the corresponding records in the graph, index
and search engine suggestions.
Deselecting a type while holding down the \f[CR]Alt\f[R] key hides the
records of all the other types.
.PP
For a type to appear in this list, it must be declared in the
configuration file and be assigned to at least one record.
.SS Filtering by keywords
The list of keywords located in the left side panel allows you to filter
the graph.
Selecting a keyword filters the graph and the index to display only the
records that contain this keyword.
You can activate several keywords simultaneously.
To deactivate a keyword, click again on the corresponding button.
.PP
For a keyword to appear, it must have been declared in the
\f[CR]tags\f[R] (or \f[CR]keywords\f[R]) field of the YAML header of at
least one record.
.SS Index
The alphabetical index of records in the Menu allows you to select a
record from a list rather than through the graph.
Clicking on a title selects the corresponding node in the graph and
opens the corresponding record.
The index can be sorted in ascending or descending alphabetical order.
.PP
Record type filters, keywords and Focus mode all modify the display of
the index.
A record hidden by either of these features will not be accessible via
the search engine.
You can reset all these effects by clicking on the \[lq]Reset current
view\[rq] button under Views in the Menu (shortcut: \f[CR]Alt\f[R] +
\f[CR]R\f[R]).
.SS View
The view is the state of the cosmoscope at any time (selected record,
active filters, focus mode, etc.).
The view can be reset by clicking the \[lq]Reset the view\[rq] button in
the \[lq]View\[rq] section of the left panel.
The view can also be saved by clicking \[lq]Set URL to current view\[rq]
then copying the URL, which can be used as a bookmark to access that
view directly.
.SH SHARING AND PUBLISHING A COSMOSCOPE
A cosmoscope can be shared like any other computer file: email, file
transfer, messaging, uploading to a server\&...
.PP
You can link directly to a record by adding its identifier preceded by a
\f[CR]#\f[R] pound sign at the end of the URL.
Example:
.PP
\f[CR]https://domain.com/cosmoscope.html#20210427185546\f[R]
.SH CREDITS
.SS Team
Cosma is designed by Arthur Perret and developed by Guillaume Brioudes.
.PP
The program was developed initially as part of the HyperOtlet research
programme led by Bertrand Müller.
Olivier Le Deuff came up with the name and Clément Borel created the
logo.
.PP
Version 2.0 was funded through the Hyperhum\[at]in research programme
led by David Pucheu.
.PP
Updates to version 2.0 were developed with support from the AlgoJ
research programme, with design suggestions by Olivier Le Deuff and
Rayya Roumanos.
.SS Dependencies
To improve the maintainability and readability of the source code, the
development team uses the following libraries:
.IP \[bu] 2
Zettlr/citr\ : 1.2.2
.IP \[bu] 2
Citeproc\ : 2.4.62
.IP \[bu] 2
Csv\-parse\ : 5.3.0
.IP \[bu] 2
D3\ : 4.13.0
.IP \[bu] 2
D3\-array\ : 2.12.1
.IP \[bu] 2
D3\-scale\ : 3.3.0
.IP \[bu] 2
Fuse.js\ : 6.6.2
.IP \[bu] 2
Glob\ : 7.2.0
.IP \[bu] 2
Graphology\ : 0.25.1
.IP \[bu] 2
Graphology\-traversal\ : 0.3.1
.IP \[bu] 2
Hotkeys\-js\ : 3.10.0
.IP \[bu] 2
Markdown\-it\ : 13.0.1
.IP \[bu] 2
Markdown\-it\-attrs\ : 4.1.4
.IP \[bu] 2
Nunjucks\ : 3.2.3
.IP \[bu] 2
Slugify\ : 1.6.5
.IP \[bu] 2
Yaml\ : 2.2.1
.IP \[bu] 2
Babel/core\ : 7.20.5
.IP \[bu] 2
Babel/preset\-env\ : 7.20.2
.IP \[bu] 2
Faker\-js/faker\ : 7.5.0
.IP \[bu] 2
Babel\-loader\ : 9.1.0
.IP \[bu] 2
Chai\ : 4.3.6
.IP \[bu] 2
Chai\-fs\ : 2.0.0
.IP \[bu] 2
Cypress\ : 10.9.0
.IP \[bu] 2
Mocha\ : 10.0.0
.IP \[bu] 2
Prettier\ : 2.8.0
.IP \[bu] 2
Webpack\ : 5.74.0
.IP \[bu] 2
Webpack\-cli\ : 4.10.0
.IP \[bu] 2
Webpack\-dev\-server\ : 4.11.1
.PP
The Cosma source code may be downloaded
from <https://github.com/graphlab-fr/cosma>.
Further documentation is available
at <https://cosma.arthurperret.fr>.
